# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks. 
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1
  lighthouse-check: foo-software/lighthouse-check@0.0.13


jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:15.1
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages
      # If you are using yarn instead npm, remove the line above and uncomment the two lines below.
      # - node/install-packages:
      #     pkg-manager: yarn 
      - run:
          name: Run tests with JUnit as reporter
          command: npm run test-ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: /home/circleci/project
          # Must be relative path from root
          paths:
            - dist
  lighthouse-check:
    executor: lighthouse-check/default
    steps:
      - lighthouse-check/audit:
          urls: 'https://passwords-test.nilssiegfried.de'
  deploy:
      docker:
        - image: cimg/base:2021.05
      steps:
        - attach_workspace:
            at: dist
        - run: sudo apt-get update && sudo apt-get install -y lftp
        - run: ls -lisah
        - run: cd dist
        - run: lftp -v
        - run: ls -lisah
        - run: lftp -c "set ftp:ssl-allow no; open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST; mirror -Rev . / --ignore-time --parallel=10"


workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample: 
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test
      - lighthouse-check:
          requires:
            - deploy
